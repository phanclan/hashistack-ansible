- name: Create nomad user
  become: yes
  user:
    name="{{ item }}" system=yes shell="/sbin/nologin"
    comment="nologin user" create_home="no" state=present
  loop:
    - "{{ nomad_user }}"
  tags:
    - nomad

- name: Create Hashi directory - Data
  become: yes
  file:
    path: /opt/{{ item }}
    state: directory
    mode: 0777
    owner: "{{ item }}"
    group: "{{ item }}"
  loop:
    - nomad
  tags:
    - nomad

- name: Create Hashi directory - configuration
  become: yes
  file:
    path: /etc/{{ item }}.d
    state: directory
    mode: 0777
    owner: "{{ item }}"
    group: "{{ item }}"
  loop:
    - nomad
  tags:
    - nomad

- name: Create HashiCups directories for Demo
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    mode: 0777
    # owner: "{{ item }}"
    # group: "{{ item }}"
  loop:
    - /var/lib/postgresql/data
    - /opt/nomad-volumes/grafana
    - /opt/nomad/volumes/grafana
  tags:
    - nomad

# - name: Install prerequisites
#   package:
#     name: "{{ item }}"
#     update_cache: yes
#   with_items: "{{ nomad_install_prerequisites }}"
#   become: yes

- name: Unzip and install hashi nomad
  become: yes
  unarchive:
    remote_src: yes
    src: https://releases.hashicorp.com/nomad/{{nomad_ver}}+ent/nomad_{{nomad_ver}}+ent_linux_{{arch}}.zip
    dest: /usr/bin/
  tags:
    - nomad-install
    - home

# - name: Nomad - Enable autocompletion.
#   shell: |
#     nomad -autocomplete-install
#   ignore_errors: yes
#   tags:
#     - nomad-install

- name: Nomad - Enable autocompletion
  ignore_errors: yes
  lineinfile:
    path: /home/{{user}}/.bashrc
    line: complete -C /usr/bin/{{item}} {{item}}
  loop:
    - nomad

- name: Create service file
  become: yes
    # Ubuntu: service files are placesd here /lib/systemd/system/
    # Ubuntu: symlinked to here when enabled /etc/systemd/system/multi-user.target.wants/
  template:
    src: init.service.j2
    dest: /lib/systemd/system/nomad.service
    # dest: /etc/systemd/system/nomad.service
    # owner: root
    # group: root
  notify: systemd_reload
  tags:
    - nomad
    - home

- name: Create config file
  become: yes
  throttle: 1
  template:
    src: "{{ item }}.hcl.j2"
    dest: "{{ nomad_config_path }}/{{ item }}.hcl"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
  loop:
    - client
    - common
    - server
  notify: nomad_restart
  tags:
    - nomad

- name: Replace CHANGENIC with user specified NIC
  replace:
    path: /etc/nomad.d/common.hcl
    regexp: 'CHANGENIC'
    replace: "{{ os_interface }}"

- name: Enable and start nomad service
  become: yes
  throttle: 1
  service:
    name: nomad
    state: restarted
    enabled: yes
  tags:
    - nomad

- name: Read license content
  become: no
  command: cat ./files/nomad.hclic
  register: nomad_license
  # with_fileglob: ./licenses/nomad.hclic
  delegate_to: localhost
  tags:
    - nomad-license
    - home

- name: License nomad
  shell: |
    echo {{ lookup('file', 'nomad.hclic')}} | nomad license put -
  run_once: true
  environment:
    # VAULT_TOKEN: "{{ lookup('file', '/tmp/rootKey/rootkey')}}"
    # VAULT_ADDR: "http://127.0.0.1:8200"
  tags:
    - nomad-license
    - home

- name: HashiCups - Pull images
  shell: |
    docker pull hashicorpdemoapp/product-api-db:v0.0.12
    docker pull hashicorpdemoapp/product-api:v0.0.12
    docker pull hashicorpdemoapp/public-api:v0.0.2
    docker pull hashicorpdemoapp/frontend:v0.0.4
    docker pull hashicorp/tfc-agent:latest
  tags:
    - nomad
    - hashicups

- name: HashiCups - Pull HashiStackimages
  shell: |
    docker pull hashicorp/vault-enterprise:latest
    docker pull hashicorp/consul-enterprise:latest
  tags:
    - nomad

- name: Nomad - DAS - Start prometheus and auto-scaler
  shell: |
    cd /root/nomad_jobs/hashicups
    nomad job run as-das-autoscaler.nomad
    nomad job run as-prometheus.nomad
  run_once: true
  environment:
    # VAULT_TOKEN: "{{ lookup('file', '/tmp/rootKey/rootkey')}}"
    # VAULT_ADDR: "http://127.0.0.1:8200"
    NOMAD_ADDR: "http://127.0.0.1:4646"
  tags:
    - nomad-license
    - hashicups

- name: Nomad - Git checkout
  git:
    repo: 'https://github.com/phanclan/nomad_jobs.git'
    dest: /tmp/nomad_jobs
    # version:
  run_once: true
  delegate_to: "{{prefix}}-a-1"
  tags:
    - nomad-license

- name: Nomad - DAS - Start prometheus and auto-scaler
  shell: |
    cd /tmp/nomad_jobs/hashicups
    nomad job run as-das-autoscaler.nomad
    nomad job run as-prometheus.nomad
  run_once: true
  delegate_to: "{{prefix}}-a-1"
  environment:
    # VAULT_TOKEN: "{{ lookup('file', '/tmp/rootKey/rootkey')}}"
    # VAULT_ADDR: "http://127.0.0.1:8200"
    NOMAD_ADDR: "http://127.0.0.1:4646"
  tags:
    - nomad-license

