- name: Install base apps
  become: yes
  apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop: "{{ base_apps_list }}"
  tags:
    - base

- name: Add mappings to /etc/hosts
  become: yes
  blockinfile:
    backup: yes
    path: /etc/hosts
    state: present
    block: |
      {{ item.value.ip }} {{ item.key }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.key }}"
  loop: "{{ lookup('dict', host_file) }}"
  tags:
    - home

# - name: Base - Update /etc/resolv.conf via resolvconf # not needed since using iptables for dns forwarding
#   become: yes
#   # replace:
#   #   path: /etc/resolv.conf
#   #   regexp: "nameserver 127.0.0.*"
#   #   replace: "nameserver 127.0.0.1"
#   lineinfile:
#     path: /etc/resolvconf/resolv.conf.d/head
#     line: nameserver 127.0.0.1
#   tags:
#     - base

- name: Forward DNS to Consul for .consul. Update /etc/systemd/resolved.conf
  become: yes
  blockinfile:
    path: /etc/systemd/resolved.conf
    block: |
      DNS=127.0.0.1
      Domains=~consul
  notify: systemd-resolved_restart

- name: use iptables to map port 53 to 8600
  become: yes
  iptables:
    table: nat
    chain: OUTPUT
    destination: localhost
    protocol: "{{item}}"
    match: "{{item}}"
    destination_port: "53"
    jump: REDIRECT
    to_ports: "8600"
  loop:
    - tcp
    - udp
  tags:
    - base

# - name: Base - Enable and start service # not needed since using iptables for dns forwarding
#   become: yes
#   service:
#     name: "{{ item }}"
#     state: started
#     enabled: yes
#   loop:
#     - resolvconf
#   tags:
#     - base

#==> Configure dnsmasq. This resolves issues with docker containers not being
#    able to resolve .consul domains.
####

- name: Configure dnsmasq to forward .consul requests to consul port 8600 # not needed since using iptables for dns forwarding
  become: yes
  copy:
    dest: "/etc/dnsmasq.d/10-consul"
    content: |
      server=/consul/127.0.0.1#8600
      # Forward everything else to Google DNS
      server=127.0.0.53
      cache-size=0
  notify: dnsmasq_restart
  tags:
    - base

# - name: Restart service dnsmasq, in all cases # not needed since using iptables for dns forwarding
#   become: yes
#   service: name=dnsmasq state=restarted
#   ignore_errors: yes
#   tags:
#     - base
#     - dns

- name: Create HashiCups directories for Demo
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    mode: 0777
    # owner: "{{ item }}"
    # group: "{{ item }}"
  loop:
    - /var/lib/postgresql/data
    - /opt/nomad-volumes/grafana
  tags:
    - base

#==> Install HashiStack Binaries - Specific roles configure further.
- name: Unzip and install hashi consul
  become: yes
  unarchive:
    remote_src: yes
    src: https://releases.hashicorp.com/consul/{{consul_ver}}+ent/consul_{{consul_ver}}+ent_linux_{{arch}}.zip
    dest: /usr/bin/
  tags:
    - base

- name: Unzip and install hashi nomad
  become: yes
  unarchive:
    remote_src: yes
    src: https://releases.hashicorp.com/nomad/{{nomad_ver}}+ent/nomad_{{nomad_ver}}+ent_linux_{{arch}}.zip
    dest: /usr/bin/
  tags:
    - base

- name: Unzip and install hashi vault
  become: yes
  unarchive:
    remote_src: yes
    src: https://releases.hashicorp.com/vault/{{vault_ver}}+ent/vault_{{vault_ver}}+ent_linux_{{arch}}.zip
    dest: /usr/bin/
  tags:
    - base

- name: Enable autocompletion
  ignore_errors: yes
  lineinfile:
    path: /home/{{user}}/.bashrc
    line: complete -C /usr/bin/{{item}} {{item}}
  loop:
    - consul
    - nomad
    - vault
  tags:
    - base
