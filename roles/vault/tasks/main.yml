# - name: Creating vault user group
#   group: name="{{ vault_group }}"
#   become: true

- name: Creating vault user
  become: yes
  user:
    name="{{ item }}" system=yes shell="/sbin/nologin"
    comment="nologin user" create_home="no" state=present
  loop:
    - "{{ vault_user }}"
  tags:
    - vault
- name: Create Hashi directories
  become: yes
  file:
    path: /opt/{{ item }}/data
    state: directory
    mode: 0777
    owner: "{{ item }}"
    group: "{{ item }}"
  loop:
    - vault
  tags:
    - vault

# - name: Install prerequisites
#   package:
#     name: "{{ item }}"
#     update_cache: yes
#   with_items: "{{ vault_install_prerequisites }}"
#   become: yes

# - name: Download binary
#   get_url:
#     url: https://releases.hashicorp.com/vault/{{vault_version}}/vault_{{vault_version}}_linux_amd64.zip
#     dest: /tmp/vault_{{vault_version}}_linux_amd64.zip
#     owner: "{{ vault_user }}"
#     group: "{{ vault_group }}"
#     mode: 0755
#     checksum: "{{vault_checksum}}"
#   register: vault_download

# - name: "Unzip vault archive"
#   unarchive:
#     src: "{{ vault_download.dest }}"
#     dest: /usr/local/bin
#     copy: no
#     owner: "{{ vault_user }}"
#     group: "{{ vault_group }}"
#     mode: 0755

- name: Unzip and install hashi vault
  become: yes
  unarchive:
    remote_src: yes
    src: https://releases.hashicorp.com/vault/{{vault_ver}}{{vault_ent}}/vault_{{vault_ver}}{{vault_ent}}_linux_{{arch}}.zip
    dest: /usr/bin/
  tags:
    - vault
    - home

# - name: "Set vault binary capabilities"
#   capabilities:
#     path: /usr/local/bin/vault
#     capability: cap_ipc_lock+ep
#     state: present

- name: Vault - Create service file
  become: yes
    # Ubuntu: service files are placesd here /lib/systemd/system/
    # Ubuntu: symlinked to here when enabled /etc/systemd/system/multi-user.target.wants/
  template:
    src: init.service.j2
    dest: /lib/systemd/system/
    # dest: /etc/systemd/system/vault.service
    # owner: root
    # group: root
  notify: systemd_reload
  tags:
    - vault
    - home

- name: Vault - Create config file
  become: yes
  template:
    src: vault.hcl.j2
    dest: "{{ vault_config_path }}/vault.hcl"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"

- name: Vault - Enable and start vault service
  become: yes
  service:
    name: vault
    state: started
    enabled: yes
  tags:
    - vault


- name: Enable transform on Vault.
  become: yes
  copy:
    dest: "/tmp/configure-vault.sh"
    content: |
      vault
      # Enable the transform secrets engine
      vault secrets enable transform

      # Create a role containing the transformations that it can perform
      vault write transform/role/payments transformations=card-number

      # Create an alphabet defining a set of characters to use for format-preserving
      # encryption (FPE) if not using the built-in alphabets.

      # Create a template defining the rules for value matching if not using the built-in template

      # Create a transformation to specify the nature of the data manipulation
      vault write transform/transformations/fpe/card-number \
        template="builtin/creditcardnumber" \
        tweak_source=internal \
        allowed_roles=payments
    mode: 0777
  # notify: dnsmasq_restart
  tags:
    - vault
